library(readxl)
ACCIONES <- read_excel("ACCIONES.xlsx")
View(ACCIONES)
head(ACCIONES)
attach(ACCIONES)
medias_ACCIONES=colMeans(ACCIONES)# vector de medias
round(medias_ACCIONES,3)
mvarcov_ACCIONES=cov(ACCIONES)
round(mvarcov_ACCIONES,3)
matriz_11=cbind(log(X1,exp(1)),log(X2,exp(1)),log(X3,exp(1)));matriz_11
round(cov(matriz_11),2)
par(mfrow=c(1,2))
hist(X1,xlab="X1",ylab="frecuencia",main="Histograma para X1")
hist(X2,xlab="X2",ylab="frecuencia",main="Histograma para X2",col="pink")
is.matrix(matriz_11)
mvarcov_ACC=cov(ACCIONES)
mvarcov_ACC=cov(matriz_11)
coefasim_acc=c(skewness(X1),skewness(X2),skewness(X3))
curt_acc=c(kurtosis(X1),kurtosis(X2),kurtosis(X3))
mvarcov_ACC
mvarcov_ACC=cov(ACCIONES);mvarcov_ACC
vargen_mvarcov_ACC = det(mvarcov_ACC); vargen_mvarcov_ACC
#Varianza Promedio
varpro_mvarcov_ACC = mean(diag(mvarcov_ACC)); varpro_mvarcov_ACC
#Varianza Total
varto_mvarcov_ACC = sum(diag(cov_medsp)); varto_mvarcov_ACC
#Varianza Total
varto_mvarcov_ACC = sum(diag(mvarcov_ACC)); varto_mvarcov_ACC
library(moments)
library(stats)
library(ggplot2)
library(dplyr)
install.packages("ppcor")
library(ppcor)
head(DataBase)
attach(DataBase)
library(readxl)
DataBase <- read_excel("DataBase.xlsx")
View(DataBase)
head(DataBase)
attach(DataBase)
names(DataBase[2:6])#nombre de las variables cuantitativas
medias = round(apply(DataBase[2:6],2,mean),1);medias
mediana = round(apply(DataBase[2:6],2,median),1);mediana
library(readxl)
DataBase <- read_excel("DataBase.xlsx")
View(DataBase)
head(DataBase)
attach(DataBase)
names(DataBase[2:6])#nombre de las variables cuantitativas
medias = round(apply(DataBase[2:6],2,mean),1);medias
mediana = round(apply(DataBase[2:6],2,median),1);mediana
D_estand = round(apply(DataBase[2:6],2,sd),1);D_estand
Curtosis = round(apply(DataBase[2:6],2,kurtosis),1);Curtosis
Coef_asim = round(apply(DataBase[2:6],2,skewness),1);Coef_asim
Coef_var = round(D_estand/medias,1);Coef_var
#enunciados medidas columna 1
medidas=c("Medias", "Mediana","Desv. Estándar","Coef. Asimetría","Coef. Curtosis","Coef.Variación")
pibm = c((mean(PIB)),median(PIB),sd(PIB),skewness(PIB),kurtosis(PIB),abs(sd(PIB)/mean(PIB)));pibm
expo = c((mean(`Exportaciones comerciales`)),median(`Exportaciones comerciales`),sd(`Exportaciones comerciales`),skewness(`Exportaciones comerciales`),kurtosis(`Exportaciones comerciales`),abs(sd(`Exportaciones comerciales`)/mean(`Exportaciones comerciales`)));expo
impo = c((mean(`Importaciones Comerciales`)),median(`Importaciones Comerciales`),sd(`Importaciones Comerciales`),skewness(`Importaciones Comerciales`),kurtosis(`Importaciones Comerciales`),abs(sd(`Importaciones Comerciales`)/mean(`Importaciones Comerciales`)));impo
reservas = c((mean(`Total de reservas menos oro`)),median(`Total de reservas menos oro`),sd(`Total de reservas menos oro`),skewness(`Total de reservas menos oro`),kurtosis(`Total de reservas menos oro`),abs(sd(`Total de reservas menos oro`)/mean(`Total de reservas menos oro`)));reservas
cuenta_corriente = c((mean(`Balance de cuenta corriente`)),median(`Balance de cuenta corriente`),sd(`Balance de cuenta corriente`),skewness(`Balance de cuenta corriente`),kurtosis(`Balance de cuenta corriente`),abs(sd(`Balance de cuenta corriente`)/mean(`Balance de cuenta corriente`)));cuenta_corriente
#tabla calculo de las medidas para DataBase
dataframe1=data.frame(medidas,pibm,expo,impo,reservas,cuenta_corriente);dataframe1
View(dataframe1)
View(dataframe1)
PIBt=c(median(PIB),median(round(abs(PIB-mean(PIB)),2)),median(round(abs(PIB-mean(PIB))/(median(PIB)),2)));PIBt
expot=c(median(`Exportaciones comerciales`),median(round(abs(`Exportaciones comerciales`-mean(`Exportaciones comerciales`)),2)),median(round(abs(`Exportaciones comerciales`-mean(`Exportaciones comerciales`))/(median(`Exportaciones comerciales`)),2)));expot
impot=c(median(`Importaciones Comerciales`),median(round(abs(`Importaciones Comerciales`-mean(`Importaciones Comerciales`)),2)),median(round(abs(`Importaciones Comerciales`-mean(`Importaciones Comerciales`))/(median(`Importaciones Comerciales`)),2)));impot
rest=c(median(`Total de reservas menos oro`),median(round(abs(`Total de reservas menos oro`-mean(`Total de reservas menos oro`)),2)),median(round(abs(`Total de reservas menos oro`-mean(`Total de reservas menos oro`))/(median(`Total de reservas menos oro`)),2)));rest
ccorrientet=c(median(`Balance de cuenta corriente`),median(round(abs(`Balance de cuenta corriente`-mean(`Balance de cuenta corriente`)),2)),median(round(abs(`Balance de cuenta corriente`-mean(`Balance de cuenta corriente`))/(median(`Balance de cuenta corriente`)),2)));ccorrientet
dataframe2=data.frame(medidas,PIBt,expot,impot,rest,ccorrientet);dataframe2
medidas=c("Medianas","Medas","meda/mediana")
PIBt=c(median(PIB),median(round(abs(PIB-mean(PIB)),2)),median(round(abs(PIB-mean(PIB))/(median(PIB)),2)));PIBt
expot=c(median(`Exportaciones comerciales`),median(round(abs(`Exportaciones comerciales`-mean(`Exportaciones comerciales`)),2)),median(round(abs(`Exportaciones comerciales`-mean(`Exportaciones comerciales`))/(median(`Exportaciones comerciales`)),2)));expot
impot=c(median(`Importaciones Comerciales`),median(round(abs(`Importaciones Comerciales`-mean(`Importaciones Comerciales`)),2)),median(round(abs(`Importaciones Comerciales`-mean(`Importaciones Comerciales`))/(median(`Importaciones Comerciales`)),2)));impot
rest=c(median(`Total de reservas menos oro`),median(round(abs(`Total de reservas menos oro`-mean(`Total de reservas menos oro`)),2)),median(round(abs(`Total de reservas menos oro`-mean(`Total de reservas menos oro`))/(median(`Total de reservas menos oro`)),2)));rest
ccorrientet=c(median(`Balance de cuenta corriente`),median(round(abs(`Balance de cuenta corriente`-mean(`Balance de cuenta corriente`)),2)),median(round(abs(`Balance de cuenta corriente`-mean(`Balance de cuenta corriente`))/(median(`Balance de cuenta corriente`)),2)));ccorrientet
dataframe2=data.frame(medidas,PIBt,expot,impot,rest,ccorrientet);dataframe2
View(dataframe2)
library(moments)
library(stats)
library(ggplot2)
library(dplyr)
install.packages("ppcor")
install.packages("ppcor")
head(DataBase)
attach(DataBase)
regresion = lm(PIB ~ `Exportaciones comerciales`, data = DataBase); regresion
summary(regresion)
plot(DataBase[2:6]$`Exportaciones comerciales`, DataBase[2:6]$PIB, xlab='PIB', ylab='Exportaciones comerciales')
abline(regresion,col=130)
confint(regresion)
confint(regresion, level = 0.90)
anova(regresion)
residuos = rstandard(regresion)
valores.ajustados = fitted(regresion)
plot(valores.ajustados, residuos)
qqnorm(residuos,col="red")
qqline(residuos,col=4)
dataframe3 = data.frame(anova(regresion));dataframe3
View(dataframe3)
mvarcov_DataBase=cov(DataBase[,2:6]);mvarcov_DataBase
dataframe4 = data.frame(mvarcov_DataBase);dataframe4
View(dataframe4)
View(dataframe4)
View(dataframe4)
View(dataframe4)
Vartotal = sum(diag(mvarcov_DataBase));Vartotal
#Varianza media
#Promedio de las varianzas
var_media=mean(diag(mvarcov_DataBase));var_media
#La varianza generaliza es el determinante de la matriz de covarianzas de la matriz de datos
##Varianza Generalizada##
VarGeneralizada = det(mvarcov_DataBase);VarGeneralizada# Mejor medida de la variabilidad global
eigen(mvarcov_DataBase)
View(dataframe4)
valprop_DataBase=eigen(mvarcov_DataBase)$values;valprop_DataBase
vecprop_DataBase=eigen(mvarcov_DataBase)$vectors;vecprop_DataBase
medias_DataBase=colMeans(DataBase[2:6]);medias_DataBase
var_DataBase = var(DataBase[2:6])
vtr_medias = data.frame(var_DataBase,medias_DataBase)
var_DataBase = round(var(DataBase[2:6]),2)
vtr_medias = data.frame(var_DataBase,medias_DataBase);vtr_medias
View(vtr_medias)
vtr_medias = data.frame(medias_DataBase);vtr_medias
View(vtr_medias)
pairs(DataBase[2:6])
cor(DataBase[2:6])
regresion = lm(PIB ~ `Exportaciones comerciales`, data = DataBase); regresion
summary(regresion)
View(regresion)
plot(DataBase[2:6]$`Exportaciones comerciales`, DataBase[2:6]$PIB, xlab='Exportaciones comerciales', ylab='PIB')
abline(regresion,col=130)
library(ggplot2)
plot1 = ggplot(data = datos, aes(habitantes, modelo$residuals)) +
geom_point(col=19) + geom_smooth(color = 4) + geom_hline(yintercept = 0) +
theme_bw()
plot1 = ggplot(data = datos, aes(habitantes, modelo$residuals)) +
geom_point(col=19) + geom_smooth(color = 4) + geom_hline(yintercept = 0) +
theme_bw()
